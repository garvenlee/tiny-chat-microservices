# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import user_pb2 as user__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UserLogin = channel.unary_unary(
            "/services.user.User/UserLogin",
            request_serializer=user__pb2.UserLoginRequest.SerializeToString,
            response_deserializer=user__pb2.UserLoginReply.FromString,
        )
        self.UserRegister = channel.unary_unary(
            "/services.user.User/UserRegister",
            request_serializer=user__pb2.UserRegisterRequest.SerializeToString,
            response_deserializer=user__pb2.UserRegisterReply.FromString,
        )
        self.UserRegisterConfirm = channel.unary_unary(
            "/services.user.User/UserRegisterConfirm",
            request_serializer=user__pb2.UserRegisterConfirmRequest.SerializeToString,
            response_deserializer=user__pb2.UserRegisterConfirmReply.FromString,
        )
        self.UserLogout = channel.unary_unary(
            "/services.user.User/UserLogout",
            request_serializer=user__pb2.UserLogoutRequest.SerializeToString,
            response_deserializer=user__pb2.UserLogoutReply.FromString,
        )
        self.UserQuery = channel.unary_unary(
            "/services.user.User/UserQuery",
            request_serializer=user__pb2.UserQueryRequest.SerializeToString,
            response_deserializer=user__pb2.UserQueryReply.FromString,
        )
        self.UserOnline = channel.unary_unary(
            "/services.user.User/UserOnline",
            request_serializer=user__pb2.UserOnlineRequest.SerializeToString,
            response_deserializer=user__pb2.UserOnlineReply.FromString,
        )
        self.UserOffline = channel.unary_unary(
            "/services.user.User/UserOffline",
            request_serializer=user__pb2.UserOfflineRequest.SerializeToString,
            response_deserializer=user__pb2.UserOfflineReply.FromString,
        )
        self.UserOnlineCheck = channel.unary_unary(
            "/services.user.User/UserOnlineCheck",
            request_serializer=user__pb2.UserOnlineCheckRequest.SerializeToString,
            response_deserializer=user__pb2.UserOnlineStatus.FromString,
        )
        self.UserMultiTerminalCheck = channel.unary_unary(
            "/services.user.User/UserMultiTerminalCheck",
            request_serializer=user__pb2.UserMultiTerminalCheckRequest.SerializeToString,
            response_deserializer=user__pb2.UserMultiTerminalCheckReply.FromString,
        )
        self.UserGatewayAddr = channel.unary_unary(
            "/services.user.User/UserGatewayAddr",
            request_serializer=user__pb2.UserGatewayAddrRequest.SerializeToString,
            response_deserializer=user__pb2.UserGatewayAddrReply.FromString,
        )
        self.UserGatewayAddrs = channel.unary_unary(
            "/services.user.User/UserGatewayAddrs",
            request_serializer=user__pb2.UserGatewayAddrsRequest.SerializeToString,
            response_deserializer=user__pb2.UserGatewayAddrsReply.FromString,
        )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UserLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserRegister(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserRegisterConfirm(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserLogout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserQuery(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserOnline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserOffline(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserOnlineCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserMultiTerminalCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserGatewayAddr(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def UserGatewayAddrs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "UserLogin": grpc.unary_unary_rpc_method_handler(
            servicer.UserLogin,
            request_deserializer=user__pb2.UserLoginRequest.FromString,
            response_serializer=user__pb2.UserLoginReply.SerializeToString,
        ),
        "UserRegister": grpc.unary_unary_rpc_method_handler(
            servicer.UserRegister,
            request_deserializer=user__pb2.UserRegisterRequest.FromString,
            response_serializer=user__pb2.UserRegisterReply.SerializeToString,
        ),
        "UserRegisterConfirm": grpc.unary_unary_rpc_method_handler(
            servicer.UserRegisterConfirm,
            request_deserializer=user__pb2.UserRegisterConfirmRequest.FromString,
            response_serializer=user__pb2.UserRegisterConfirmReply.SerializeToString,
        ),
        "UserLogout": grpc.unary_unary_rpc_method_handler(
            servicer.UserLogout,
            request_deserializer=user__pb2.UserLogoutRequest.FromString,
            response_serializer=user__pb2.UserLogoutReply.SerializeToString,
        ),
        "UserQuery": grpc.unary_unary_rpc_method_handler(
            servicer.UserQuery,
            request_deserializer=user__pb2.UserQueryRequest.FromString,
            response_serializer=user__pb2.UserQueryReply.SerializeToString,
        ),
        "UserOnline": grpc.unary_unary_rpc_method_handler(
            servicer.UserOnline,
            request_deserializer=user__pb2.UserOnlineRequest.FromString,
            response_serializer=user__pb2.UserOnlineReply.SerializeToString,
        ),
        "UserOffline": grpc.unary_unary_rpc_method_handler(
            servicer.UserOffline,
            request_deserializer=user__pb2.UserOfflineRequest.FromString,
            response_serializer=user__pb2.UserOfflineReply.SerializeToString,
        ),
        "UserOnlineCheck": grpc.unary_unary_rpc_method_handler(
            servicer.UserOnlineCheck,
            request_deserializer=user__pb2.UserOnlineCheckRequest.FromString,
            response_serializer=user__pb2.UserOnlineStatus.SerializeToString,
        ),
        "UserMultiTerminalCheck": grpc.unary_unary_rpc_method_handler(
            servicer.UserMultiTerminalCheck,
            request_deserializer=user__pb2.UserMultiTerminalCheckRequest.FromString,
            response_serializer=user__pb2.UserMultiTerminalCheckReply.SerializeToString,
        ),
        "UserGatewayAddr": grpc.unary_unary_rpc_method_handler(
            servicer.UserGatewayAddr,
            request_deserializer=user__pb2.UserGatewayAddrRequest.FromString,
            response_serializer=user__pb2.UserGatewayAddrReply.SerializeToString,
        ),
        "UserGatewayAddrs": grpc.unary_unary_rpc_method_handler(
            servicer.UserGatewayAddrs,
            request_deserializer=user__pb2.UserGatewayAddrsRequest.FromString,
            response_serializer=user__pb2.UserGatewayAddrsReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "services.user.User", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UserLogin(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserLogin",
            user__pb2.UserLoginRequest.SerializeToString,
            user__pb2.UserLoginReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserRegister(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserRegister",
            user__pb2.UserRegisterRequest.SerializeToString,
            user__pb2.UserRegisterReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserRegisterConfirm(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserRegisterConfirm",
            user__pb2.UserRegisterConfirmRequest.SerializeToString,
            user__pb2.UserRegisterConfirmReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserLogout(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserLogout",
            user__pb2.UserLogoutRequest.SerializeToString,
            user__pb2.UserLogoutReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserQuery(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserQuery",
            user__pb2.UserQueryRequest.SerializeToString,
            user__pb2.UserQueryReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserOnline(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserOnline",
            user__pb2.UserOnlineRequest.SerializeToString,
            user__pb2.UserOnlineReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserOffline(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserOffline",
            user__pb2.UserOfflineRequest.SerializeToString,
            user__pb2.UserOfflineReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserOnlineCheck(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserOnlineCheck",
            user__pb2.UserOnlineCheckRequest.SerializeToString,
            user__pb2.UserOnlineStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserMultiTerminalCheck(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserMultiTerminalCheck",
            user__pb2.UserMultiTerminalCheckRequest.SerializeToString,
            user__pb2.UserMultiTerminalCheckReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserGatewayAddr(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserGatewayAddr",
            user__pb2.UserGatewayAddrRequest.SerializeToString,
            user__pb2.UserGatewayAddrReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def UserGatewayAddrs(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/services.user.User/UserGatewayAddrs",
            user__pb2.UserGatewayAddrsRequest.SerializeToString,
            user__pb2.UserGatewayAddrsReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

syntax = "proto3";
package services.auth;
import "user.proto";

service AuthUser {
  rpc AuthLogin(AuthLoginRequest) returns (AuthLoginReply) {}
  rpc AuthLogout(AuthLogoutRequest) returns (AuthLogoutReply) {}
  rpc AuthRegister(AuthRegisterRequest) returns (AuthRegisterReply) {}
  rpc AuthRegisterConfirm(AuthRegisterConfirmRequest)
      returns (AuthRegisterConfirmReply) {}
  rpc AuthToken(AuthTokenRequest) returns (AuthTokenReply) {}
  rpc AuthRefresh(AuthRefreshTokenRequest) returns (AuthRefreshTokenReply) {}
}

enum AuthOpStatus {
  AUTH_SUCCESS = 0;
  AUTH_FAILED = 1;
  AUTH_EXPIRED = 2;
  AUTH_TIMEOUT = 3;
}

enum AuthFailedDetailedInfo {
  AUTH_INCORRECT_EMAIL = 0;
  AUTH_INCORRECT_PWD = 1;
  AUTH_INCORRECT_CONFIRMATION = 2;
  AUTH_NOT_EXISTS = 3;
  AUTH_ALREADY_EXISTS = 4;
  AUTH_UNKNOWN_ERROR = 5;
}

message AuthLoginRequest {
  string email = 1;
  string password = 2;
}

message AuthLoginReply {
  AuthOpStatus status = 1;
  optional AuthFailedDetailedInfo info = 2;
  optional user.UserDetailedInfo user = 3;
  optional string access_token = 4;
  optional string refresh_token = 5;
}

message AuthLogoutRequest { uint32 uid = 1; }
message AuthLogoutReply { AuthOpStatus status = 1; }

message AuthRegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}
message AuthRegisterReply {
  AuthOpStatus status = 1;
  optional AuthFailedDetailedInfo info = 2;
  optional string token = 3;
}

message AuthRegisterConfirmRequest { string token = 1; }
message AuthRegisterConfirmReply {
  AuthOpStatus status = 1;
  optional AuthFailedDetailedInfo info = 2;
  optional string email = 3;
}

message AuthTokenRequest { string access_token = 1; }
message AuthTokenReply {
  AuthOpStatus status = 1;
  optional uint32 uid = 2;
}

message AuthRefreshTokenRequest {
  uint32 uid = 1;
  optional string refresh_token = 2;
}

message AuthRefreshTokenReply {
  AuthOpStatus status = 1;
  optional string access_token = 2;
  optional string refresh_token = 3;
}
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import cass_storage_pb2 as cass__storage__pb2


class CassStorageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WriteToSession = channel.unary_unary(
                '/services.cass_storage.CassStorage/WriteToSession',
                request_serializer=cass__storage__pb2.CassMsgRequest.SerializeToString,
                response_deserializer=cass__storage__pb2.CassMsgReply.FromString,
                )
        self.WriteToInbox = channel.unary_unary(
                '/services.cass_storage.CassStorage/WriteToInbox',
                request_serializer=cass__storage__pb2.CassMsgRequest.SerializeToString,
                response_deserializer=cass__storage__pb2.CassMsgReply.FromString,
                )
        self.ReadInbox = channel.unary_unary(
                '/services.cass_storage.CassStorage/ReadInbox',
                request_serializer=cass__storage__pb2.CassInboxRequest.SerializeToString,
                response_deserializer=cass__storage__pb2.CassInboxReply.FromString,
                )
        self.ReadSession = channel.unary_stream(
                '/services.cass_storage.CassStorage/ReadSession',
                request_serializer=cass__storage__pb2.CassSessionRequest.SerializeToString,
                response_deserializer=cass__storage__pb2.CassSessionReply.FromString,
                )


class CassStorageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def WriteToSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteToInbox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadInbox(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CassStorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WriteToSession': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteToSession,
                    request_deserializer=cass__storage__pb2.CassMsgRequest.FromString,
                    response_serializer=cass__storage__pb2.CassMsgReply.SerializeToString,
            ),
            'WriteToInbox': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteToInbox,
                    request_deserializer=cass__storage__pb2.CassMsgRequest.FromString,
                    response_serializer=cass__storage__pb2.CassMsgReply.SerializeToString,
            ),
            'ReadInbox': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadInbox,
                    request_deserializer=cass__storage__pb2.CassInboxRequest.FromString,
                    response_serializer=cass__storage__pb2.CassInboxReply.SerializeToString,
            ),
            'ReadSession': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadSession,
                    request_deserializer=cass__storage__pb2.CassSessionRequest.FromString,
                    response_serializer=cass__storage__pb2.CassSessionReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'services.cass_storage.CassStorage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CassStorage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def WriteToSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.cass_storage.CassStorage/WriteToSession',
            cass__storage__pb2.CassMsgRequest.SerializeToString,
            cass__storage__pb2.CassMsgReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteToInbox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.cass_storage.CassStorage/WriteToInbox',
            cass__storage__pb2.CassMsgRequest.SerializeToString,
            cass__storage__pb2.CassMsgReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadInbox(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/services.cass_storage.CassStorage/ReadInbox',
            cass__storage__pb2.CassInboxRequest.SerializeToString,
            cass__storage__pb2.CassInboxReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/services.cass_storage.CassStorage/ReadSession',
            cass__storage__pb2.CassSessionRequest.SerializeToString,
            cass__storage__pb2.CassSessionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
